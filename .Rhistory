shiny::runApp()
runApp()
runApp()
dat = read.csv("app test 2.csv")
dat[[1]]
names(dat)
colnames(dat)
items = colnames(dat)
runApp()
length(items)
length(dat == 3)
length(dat) == 3
runApp()
items[1]
items[-c(2:3)]
runApp()
items2 = items[-c(2:3)]
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
dat$Subject
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
rsconnect::deployApp('C:/Users/nickm.000/Documents/GitHub/lrd/lrdSHINY')
rsconnect::deployApp('C:/Users/nickm.000/Documents/GitHub/lrd/lrdSHINY')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
rsconnect::deployApp('C:/Users/nickm.000/Documents/GitHub/lrd/lrdSHINY')
119*.07
127.33*.5
runApp()
View(dat)
library(lrd)
prop.correct(dat$Response, id = dat$Conditon.2)
View(dat)
dat = read.csv("app test 2.csv")
View(dat)
dat2 = read.csv("Delayed final data.csv")
prop.correct(dat2$Recall, id = dat2$Direction)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
namelist = dat[ , 1]
namelist = colnames(dat[ , 1])
dat[ , 1]
names(dat[1])
colnames(dat[1])
runApp()
runApp()
names(dat[1])
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
dat[-condition]
dat[-Condition]
dat[-1]
things = colnames(dat)
things
things - "Target"
things - ["Target"]
things - things[1]
things[ -1]
things[[-"Target"]]
dat["Condition"]
dat[-"Condition"]
things
dat2 = dat2[ , -condition]
dat2 = dat2[ , -Condition]
dat2 = dat2[-Condition]
dat2 = dat[-Condition]
dat[Condition]
dat[Condition ]
drops = c("Target")
dat , !(names(dat) %in% drops)]
dat[] , !(names(dat) %in% drops)]
dat[ , !(names(dat) %in% drops)]
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(dat2)
prop.correct(dat2$Recall, id = dat2$Condition, group.by = dat2$Subject)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
dat[ , !(names(dat) %in% drops)]
runApp()
namelist = names(dat)
namelist[ , !(names(namelist) %in% drops)]
namelist[!(names(namelist) %in% drops)]
runApp()
runApp()
names(things[ ,1]
names(things[ ,1])
names(things[1])
names(dat[1])
names(dat[,1])
names(dat[Condition])
names(dat[,Condition])
dat["Target"]
names(dat["Target"])
runApp()
runApp()
runApp()
runApp()
library(dplyr)
runApp()
runApp()
runApp('~/GitHub/lrd/lrdSHINY')
rsconnect::deployApp('C:/Users/nickm.000/Documents/GitHub/lrd/lrdSHINY')
rsconnect::deployApp('C:/Users/nickm.000/Documents/GitHub/lrd/lrdSHINY')
rsconnect::deployApp('C:/Users/nickm.000/Documents/GitHub/lrd/lrdSHINY')
rsconnect::deployApp('C:/Users/nickm.000/Documents/GitHub/lrd/lrdSHINY')
runApp('~/GitHub/lrd/lrdSHINY')
View(dat2)
dat2[, -grep("Subject", colnames(dat2))]
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
namelist = names(dat)
namelist[ , !names(namelist) %in% drops)]
namelist[ , !(names(namelist) %in% drops)]
namelist[!(names(namelist) %in% drops)]
runApp('~/GitHub/lrd/lrdSHINY')
runApp('~/GitHub/lrd/lrdSHINY')
runApp('~/GitHub/lrd/lrdSHINY')
runApp('~/GitHub/lrd/lrdSHINY')
runApp('~/GitHub/lrd/lrdSHINY')
runApp('~/GitHub/lrd/lrdSHINY')
runApp('~/GitHub/lrd/lrdSHINY')
runApp('~/GitHub/lrd/lrdSHINY')
rsconnect::deployApp('C:/Users/nickm.000/Documents/GitHub/lrd/lrdSHINY')
runApp('~/GitHub/lrd/lrdSHINY')
rsconnect::deployApp('C:/Users/nickm.000/Documents/GitHub/lrd/lrdSHINY')
rsconnect::deployApp('C:/Users/nickm.000/Documents/GitHub/lrd/lrdSHINY')
rsconnect::deployApp('C:/Users/nickm.000/Documents/GitHub/lrd/lrdSHINY')
rsconnect::deployApp('C:/Users/nickm.000/Documents/GitHub/lrd/lrdSHINY')
rsconnect::deployApp('C:/Users/nickm.000/Documents/GitHub/lrd/lrdSHINY')
rsconnect::deployApp('C:/Users/nickm.000/Documents/GitHub/lrd/lrdSHINY')
setwd("~/GitHub/lrd/R")
setwd("~/GitHub/lrd")
devtools::document()
devtools::install_github("NPM27/lrd")
devtools::document()
devtools::install_github("NPM27/lrd")
library(lrd)
function(percent_match())
percent_match
